{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pedro/moveit2/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nexport var ChallengeContext = /*#__PURE__*/createContext({});\nexport function ChallengeProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExpirence = _useState2[0],\n      setCurrentExpirence = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengeCompleted = _useState3[1];\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    console.log('new challenge');\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengeContext.Provider, {\n    value: {\n      level: level,\n      levelUp: levelUp,\n      currentExpirence: currentExpirence,\n      challengesCompleted: challengesCompleted\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengeProvider, \"cgRTATbbVhui95TKwyDTE+3F/mc=\");\n\n_c = ChallengeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengeProvider\");","map":{"version":3,"sources":["/home/pedro/moveit2/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","ChallengeContext","ChallengeProvider","children","level","setLevel","currentExpirence","setCurrentExpirence","challengesCompleted","setChallengeCompleted","levelUp","startNewChallenge","console","log"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAmD,OAAnD;AAEA,OAAO,IAAMC,gBAAgB,gBAAGF,aAAa,CAAC,EAAD,CAAtC;AAOP,OAAO,SAASG,iBAAT,OAAiE;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;;AAAA,kBAC1CH,QAAQ,CAAC,CAAD,CADkC;AAAA,MAC7DI,KAD6D;AAAA,MACtDC,QADsD;;AAAA,mBAEpBL,QAAQ,CAAC,CAAD,CAFY;AAAA,MAE7DM,gBAF6D;AAAA,MAE3CC,mBAF2C;;AAAA,mBAGfP,QAAQ,CAAC,CAAD,CAHO;AAAA,MAG7DQ,mBAH6D;AAAA,MAGxCC,qBAHwC;;AAKpE,WAASC,OAAT,GAAmB;AACfL,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;;AAED,WAASO,iBAAT,GAA6B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;;AACD,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAAET,MAAAA,KAAK,EAALA,KAAF;AAASM,MAAAA,OAAO,EAAPA,OAAT;AAAkBJ,MAAAA,gBAAgB,EAAhBA,gBAAlB;AAAoCE,MAAAA,mBAAmB,EAAnBA;AAApC,KAAlC;AAAA,cACML;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAnBeD,iB;;KAAAA,iB","sourcesContent":["import { createContext, useState, ReactNode } from 'react'\n\nexport const ChallengeContext = createContext({})\n\n\ninterface ChallengeProviderProps {\n    children: ReactNode\n}\n\nexport function ChallengeProvider({ children }: ChallengeProviderProps) {\n    const [level, setLevel] = useState(1)\n    const [currentExpirence, setCurrentExpirence] = useState(0)\n    const [challengesCompleted, setChallengeCompleted] = useState(0)\n\n    function levelUp() {\n        setLevel(level + 1)\n    }\n\n    function startNewChallenge() {\n        console.log('new challenge')\n    }\n    return (\n        <ChallengeContext.Provider value={{ level, levelUp, currentExpirence, challengesCompleted }}>\n            { children}\n        </ChallengeContext.Provider>\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}