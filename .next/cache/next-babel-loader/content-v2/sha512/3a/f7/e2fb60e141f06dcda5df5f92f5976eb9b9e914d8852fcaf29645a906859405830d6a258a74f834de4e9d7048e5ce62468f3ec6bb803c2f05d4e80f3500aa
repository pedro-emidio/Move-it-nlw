{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pedro/moveit2/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport challenges from '../../challenges.json';\nexport var ChallengeContext = /*#__PURE__*/createContext({});\nexport function ChallengeProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExpirience = _useState2[0],\n      setCurrentExpirence = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengeCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExpirience + amount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengeContext.Provider, {\n    value: {\n      level: level,\n      levelUp: levelUp,\n      currentExpirience: currentExpirience,\n      challengesCompleted: challengesCompleted,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      experienceToNextLevel: experienceToNextLevel,\n      completeChallenge: completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengeProvider, \"xDPy4Et10fMZOblskfbavjyrAs8=\");\n\n_c = ChallengeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengeProvider\");","map":{"version":3,"sources":["/home/pedro/moveit2/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","challenges","ChallengeContext","ChallengeProvider","children","level","setLevel","currentExpirience","setCurrentExpirence","challengesCompleted","setChallengeCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","resetChallenge","completeChallenge","amount","finalExperience"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAwBA,OAAO,IAAMC,gBAAgB,gBAAGH,aAAa,CAAC,EAAD,CAAtC;AAGP,OAAO,SAASI,iBAAT,OAAiE;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;;AAAA,kBAC1CJ,QAAQ,CAAC,CAAD,CADkC;AAAA,MAC7DK,KAD6D;AAAA,MACtDC,QADsD;;AAAA,mBAEnBN,QAAQ,CAAC,CAAD,CAFW;AAAA,MAE7DO,iBAF6D;AAAA,MAE1CC,mBAF0C;;AAAA,mBAGfR,QAAQ,CAAC,CAAD,CAHO;AAAA,MAG7DS,mBAH6D;AAAA,MAGxCC,qBAHwC;;AAAA,mBAKtBV,QAAQ,CAAC,IAAD,CALc;AAAA,MAK7DW,eAL6D;AAAA,MAK5CC,kBAL4C;;AAOpE,MAAMC,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACV,KAAK,GAAG,CAAT,IAAc,CAAvB,EAA0B,CAA1B,CAA9B;;AAEA,WAASW,OAAT,GAAmB;AACfV,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;;AAED,WAASY,iBAAT,GAA6B;AACzB,QAAMC,oBAAoB,GAAGJ,IAAI,CAACK,KAAL,CAAWL,IAAI,CAACM,MAAL,KAAgBnB,UAAU,CAACoB,MAAtC,CAA7B;AACA,QAAMC,SAAS,GAAGrB,UAAU,CAACiB,oBAAD,CAA5B;AAEAN,IAAAA,kBAAkB,CAACU,SAAD,CAAlB;AAEH;;AACD,WAASC,cAAT,GAA0B;AACtBX,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAED,WAASY,iBAAT,GAA6B;AACzB,QAAI,CAACb,eAAL,EAAsB;AAClB;AACH;;AAHwB,QAIjBc,MAJiB,GAINd,eAJM,CAIjBc,MAJiB;AAKzB,QAAIC,eAAe,GAAGnB,iBAAiB,GAAGkB,MAA1C;AACH;;AAED,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAC9BpB,MAAAA,KAAK,EAALA,KAD8B;AACvBW,MAAAA,OAAO,EAAPA,OADuB;AACdT,MAAAA,iBAAiB,EAAjBA,iBADc;AACKE,MAAAA,mBAAmB,EAAnBA,mBADL;AAC0BQ,MAAAA,iBAAiB,EAAjBA,iBAD1B;AAC6CN,MAAAA,eAAe,EAAfA,eAD7C;AAC8DY,MAAAA,cAAc,EAAdA,cAD9D;AAE9BV,MAAAA,qBAAqB,EAArBA,qBAF8B;AAEPW,MAAAA,iBAAiB,EAAjBA;AAFO,KAAlC;AAAA,cAIMpB;AAJN;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA1CeD,iB;;KAAAA,iB","sourcesContent":["import { createContext, useState, ReactNode } from 'react'\nimport challenges from '../../challenges.json'\n\ninterface challenge {\n    type: 'body' | 'eye'\n    description: string\n    amount: number\n}\n\ninterface ChallengesContextData {\n    level: number\n    experienceToNextLevel: number\n    challengesCompleted: number\n    currentExpirence: number\n    levelUp: () => void\n    resetChallenge: () => void\n    startNewChallenge: () => void\n    completeChallenge: () => void\n    activeChallenge: challenge\n}\n\ninterface ChallengeProviderProps {\n    children: ReactNode\n}\n\nexport const ChallengeContext = createContext({} as ChallengesContextData)\n\n\nexport function ChallengeProvider({ children }: ChallengeProviderProps) {\n    const [level, setLevel] = useState(1)\n    const [currentExpirience, setCurrentExpirence] = useState(0)\n    const [challengesCompleted, setChallengeCompleted] = useState(0)\n\n    const [activeChallenge, setActiveChallenge] = useState(null)\n\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2)\n\n    function levelUp() {\n        setLevel(level + 1)\n    }\n\n    function startNewChallenge() {\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\n        const challenge = challenges[randomChallengeIndex]\n\n        setActiveChallenge(challenge)\n\n    }\n    function resetChallenge() {\n        setActiveChallenge(null)\n    }\n\n    function completeChallenge() {\n        if (!activeChallenge) {\n            return\n        }\n        const { amount } = activeChallenge\n        let finalExperience = currentExpirience + amount\n    }\n\n    return (\n        <ChallengeContext.Provider value={{\n            level, levelUp, currentExpirience, challengesCompleted, startNewChallenge, activeChallenge, resetChallenge,\n            experienceToNextLevel, completeChallenge\n        }}>\n            { children}\n        </ChallengeContext.Provider>\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}