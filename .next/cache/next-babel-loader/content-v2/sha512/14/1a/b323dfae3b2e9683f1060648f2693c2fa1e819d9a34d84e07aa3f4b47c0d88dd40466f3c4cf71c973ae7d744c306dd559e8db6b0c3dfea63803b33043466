{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/pedro/moveit2/src/contexts/ChallengesContext.tsx\";\nimport { createContext, useState } from 'react';\nimport challenges from '../../challenges.json';\nexport const ChallengeContext = /*#__PURE__*/createContext({});\nexport function ChallengeProvider({\n  children\n}) {\n  const {\n    0: level,\n    1: setLevel\n  } = useState(1);\n  const {\n    0: currentExpirence,\n    1: setCurrentExpirence\n  } = useState(0);\n  const {\n    0: challengesCompleted,\n    1: setChallengeCompleted\n  } = useState(0);\n  const {\n    0: activeChallenge,\n    1: setActiveChallenge\n  } = useState(null);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    const challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengeContext.Provider, {\n    value: {\n      level,\n      levelUp,\n      currentExpirence,\n      challengesCompleted,\n      startNewChallenge,\n      activeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/pedro/moveit2/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","challenges","ChallengeContext","ChallengeProvider","children","level","setLevel","currentExpirence","setCurrentExpirence","challengesCompleted","setChallengeCompleted","activeChallenge","setActiveChallenge","levelUp","startNewChallenge","randomChallengeIndex","Math","floor","random","length","challenge","resetChallenge"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAmD,OAAnD;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAqBA,OAAO,MAAMC,gBAAgB,gBAAGH,aAAa,CAAC,EAAD,CAAtC;AAGP,OAAO,SAASI,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAAiE;AACpE,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACO,gBAAD;AAAA,OAAmBC;AAAnB,MAA0CR,QAAQ,CAAC,CAAD,CAAxD;AACA,QAAM;AAAA,OAACS,mBAAD;AAAA,OAAsBC;AAAtB,MAA+CV,QAAQ,CAAC,CAAD,CAA7D;AAEA,QAAM;AAAA,OAACW,eAAD;AAAA,OAAkBC;AAAlB,MAAwCZ,QAAQ,CAAC,IAAD,CAAtD;;AAEA,WAASa,OAAT,GAAmB;AACfP,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;;AAED,WAASS,iBAAT,GAA6B;AACzB,UAAMC,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBjB,UAAU,CAACkB,MAAtC,CAA7B;AACA,UAAMC,SAAS,GAAGnB,UAAU,CAACc,oBAAD,CAA5B;AAEAH,IAAAA,kBAAkB,CAACQ,SAAD,CAAlB;AAEH;;AACD,WAASC,cAAT,GAA0B;AACtBT,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAED,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAAEP,MAAAA,KAAF;AAASQ,MAAAA,OAAT;AAAkBN,MAAAA,gBAAlB;AAAoCE,MAAAA,mBAApC;AAAyDK,MAAAA,iBAAzD;AAA4EH,MAAAA;AAA5E,KAAlC;AAAA,cACMP;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH","sourcesContent":["import { createContext, useState, ReactNode } from 'react'\nimport challenges from '../../challenges.json'\n\ninterface challenge {\n    type: 'body' | 'eye'\n    description: string\n    amount: number\n}\n\ninterface ChallengesContextData {\n    level: number\n    levelUp: () => void\n    currentExpirence: number\n    challengesCompleted: number\n    startNewChallenge: () => void\n    activeChallenge: challenge\n}\n\ninterface ChallengeProviderProps {\n    children: ReactNode\n}\n\nexport const ChallengeContext = createContext({} as ChallengesContextData)\n\n\nexport function ChallengeProvider({ children }: ChallengeProviderProps) {\n    const [level, setLevel] = useState(1)\n    const [currentExpirence, setCurrentExpirence] = useState(0)\n    const [challengesCompleted, setChallengeCompleted] = useState(0)\n\n    const [activeChallenge, setActiveChallenge] = useState(null)\n\n    function levelUp() {\n        setLevel(level + 1)\n    }\n\n    function startNewChallenge() {\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\n        const challenge = challenges[randomChallengeIndex]\n\n        setActiveChallenge(challenge)\n\n    }\n    function resetChallenge() {\n        setActiveChallenge(null)\n    }\n\n    return (\n        <ChallengeContext.Provider value={{ level, levelUp, currentExpirence, challengesCompleted, startNewChallenge, activeChallenge }}>\n            { children}\n        </ChallengeContext.Provider>\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}