{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pedro/moveit2/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from 'react';\nimport challenges from '../../challenges.json';\nexport var ChallengeContext = /*#__PURE__*/createContext({});\nexport function ChallengeProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExpirience = _useState2[0],\n      setCurrentExpirence = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n    new Audio('/notification.mp3').play;\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio!', {\n        body: \"Valendo \".concat(challenge.amount, \"xp.\")\n      });\n    }\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExpirience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExpirence(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengeContext.Provider, {\n    value: {\n      level: level,\n      levelUp: levelUp,\n      currentExpirience: currentExpirience,\n      challengesCompleted: challengesCompleted,\n      startNewChallenge: startNewChallenge,\n      activeChallenge: activeChallenge,\n      resetChallenge: resetChallenge,\n      experienceToNextLevel: experienceToNextLevel,\n      completeChallenge: completeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengeProvider, \"u+p6YMxt7P6bjhhuHkzxKqWKvjE=\");\n\n_c = ChallengeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengeProvider\");","map":{"version":3,"sources":["/home/pedro/moveit2/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","useEffect","challenges","ChallengeContext","ChallengeProvider","children","level","setLevel","currentExpirience","setCurrentExpirence","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","levelUp","startNewChallenge","randomChallengeIndex","floor","random","length","challenge","Audio","play","permission","body","amount","resetChallenge","completeChallenge","finalExperience"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAwBA,OAAO,IAAMC,gBAAgB,gBAAGJ,aAAa,CAAC,EAAD,CAAtC;AAGP,OAAO,SAASK,iBAAT,OAAiE;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;;AAAA,kBAC1CL,QAAQ,CAAC,CAAD,CADkC;AAAA,MAC7DM,KAD6D;AAAA,MACtDC,QADsD;;AAAA,mBAEnBP,QAAQ,CAAC,CAAD,CAFW;AAAA,MAE7DQ,iBAF6D;AAAA,MAE1CC,mBAF0C;;AAAA,mBAGdT,QAAQ,CAAC,CAAD,CAHM;AAAA,MAG7DU,mBAH6D;AAAA,MAGxCC,sBAHwC;;AAAA,mBAKtBX,QAAQ,CAAC,IAAD,CALc;AAAA,MAK7DY,eAL6D;AAAA,MAK5CC,kBAL4C;;AAOpE,MAAMC,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACV,KAAK,GAAG,CAAT,IAAc,CAAvB,EAA0B,CAA1B,CAA9B;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACZgB,IAAAA,YAAY,CAACC,iBAAb;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASC,OAAT,GAAmB;AACfZ,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;;AAED,WAASc,iBAAT,GAA6B;AACzB,QAAMC,oBAAoB,GAAGN,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACQ,MAAL,KAAgBrB,UAAU,CAACsB,MAAtC,CAA7B;AACA,QAAMC,SAAS,GAAGvB,UAAU,CAACmB,oBAAD,CAA5B;AAEAR,IAAAA,kBAAkB,CAACY,SAAD,CAAlB;AAEA,QAAIC,KAAJ,CAAU,mBAAV,EAA+BC,IAA/B;;AAEA,QAAIV,YAAY,CAACW,UAAb,KAA4B,SAAhC,EAA2C;AACvC,UAAIX,YAAJ,CAAiB,eAAjB,EAAkC;AAC9BY,QAAAA,IAAI,oBAAaJ,SAAS,CAACK,MAAvB;AAD0B,OAAlC;AAGH;AAEJ;;AACD,WAASC,cAAT,GAA0B;AACtBlB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAED,WAASmB,iBAAT,GAA6B;AACzB,QAAI,CAACpB,eAAL,EAAsB;AAClB;AACH;;AAHwB,QAIjBkB,MAJiB,GAINlB,eAJM,CAIjBkB,MAJiB;AAMzB,QAAIG,eAAe,GAAGzB,iBAAiB,GAAGsB,MAA1C;;AAEA,QAAIG,eAAe,IAAInB,qBAAvB,EAA8C;AAC1CmB,MAAAA,eAAe,GAAGA,eAAe,GAAGnB,qBAApC;AACAK,MAAAA,OAAO;AACV;;AACDV,IAAAA,mBAAmB,CAACwB,eAAD,CAAnB;AACApB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,IAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACH;;AAED,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAC9BJ,MAAAA,KAAK,EAALA,KAD8B;AACvBa,MAAAA,OAAO,EAAPA,OADuB;AACdX,MAAAA,iBAAiB,EAAjBA,iBADc;AACKE,MAAAA,mBAAmB,EAAnBA,mBADL;AAC0BU,MAAAA,iBAAiB,EAAjBA,iBAD1B;AAC6CR,MAAAA,eAAe,EAAfA,eAD7C;AAC8DmB,MAAAA,cAAc,EAAdA,cAD9D;AAE9BjB,MAAAA,qBAAqB,EAArBA,qBAF8B;AAEPkB,MAAAA,iBAAiB,EAAjBA;AAFO,KAAlC;AAAA,cAIM3B;AAJN;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA/DeD,iB;;KAAAA,iB","sourcesContent":["import { createContext, useState, ReactNode, useEffect } from 'react'\nimport challenges from '../../challenges.json'\n\ninterface challenge {\n    type: 'body' | 'eye'\n    description: string\n    amount: number\n}\n\ninterface ChallengesContextData {\n    level: number\n    experienceToNextLevel: number\n    challengesCompleted: number\n    currentExpirience: number\n    levelUp: () => void\n    resetChallenge: () => void\n    startNewChallenge: () => void\n    completeChallenge: () => void\n    activeChallenge: challenge\n}\n\ninterface ChallengeProviderProps {\n    children: ReactNode\n}\n\nexport const ChallengeContext = createContext({} as ChallengesContextData)\n\n\nexport function ChallengeProvider({ children }: ChallengeProviderProps) {\n    const [level, setLevel] = useState(1)\n    const [currentExpirience, setCurrentExpirence] = useState(0)\n    const [challengesCompleted, setChallengesCompleted] = useState(0)\n\n    const [activeChallenge, setActiveChallenge] = useState(null)\n\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2)\n\n    useEffect(() => {\n        Notification.requestPermission()\n    }, [])\n\n    function levelUp() {\n        setLevel(level + 1)\n    }\n\n    function startNewChallenge() {\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length)\n        const challenge = challenges[randomChallengeIndex]\n\n        setActiveChallenge(challenge)\n\n        new Audio('/notification.mp3').play\n\n        if (Notification.permission === 'granted') {\n            new Notification('Novo desafio!', {\n                body: `Valendo ${challenge.amount}xp.`\n            })\n        }\n\n    }\n    function resetChallenge() {\n        setActiveChallenge(null)\n    }\n\n    function completeChallenge() {\n        if (!activeChallenge) {\n            return\n        }\n        const { amount } = activeChallenge\n\n        let finalExperience = currentExpirience + amount\n\n        if (finalExperience >= experienceToNextLevel) {\n            finalExperience = finalExperience - experienceToNextLevel\n            levelUp()\n        }\n        setCurrentExpirence(finalExperience)\n        setActiveChallenge(null)\n        setChallengesCompleted(challengesCompleted + 1)\n    }\n\n    return (\n        <ChallengeContext.Provider value={{\n            level, levelUp, currentExpirience, challengesCompleted, startNewChallenge, activeChallenge, resetChallenge,\n            experienceToNextLevel, completeChallenge\n        }}>\n            { children}\n        </ChallengeContext.Provider>\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}