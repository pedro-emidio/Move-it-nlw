{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/pedro/moveit2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/pedro/moveit2/src/components/Coutdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport styles from '../styles/components/Coutdown.module.css';\nexport function Coutdown() {\n  _s();\n\n  var _useState = useState(25 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isAactive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondsLeft = _String$padStart$spli4[0],\n      secondsRight = _String$padStart$spli4[1];\n\n  function startContdown() {\n    setIsActive(true);\n  }\n\n  useEffect(function () {\n    if (isAactive && time > 0) {\n      setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    }\n  }, [isAactive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.coutdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), isAactive ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.startCountdownButton,\n      onClick: startContdown,\n      children: \"Abandonar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: styles.startCountdownButton,\n      onClick: startContdown,\n      children: \"Iniciar ciclo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Coutdown, \"FTVhL46BrhTSHe4/PvEp5FOBdwQ=\");\n\n_c = Coutdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Coutdown\");","map":{"version":3,"sources":["/home/pedro/moveit2/src/components/Coutdown.tsx"],"names":["useState","useEffect","styles","Coutdown","time","setTime","isAactive","setIsActive","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondsLeft","secondsRight","startContdown","setTimeout","coutdownContainer","startCountdownButton"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AAAA,kBACCH,QAAQ,CAAC,KAAK,EAAN,CADT;AAAA,MAChBI,IADgB;AAAA,MACVC,OADU;;AAAA,mBAEUL,QAAQ,CAAC,KAAD,CAFlB;AAAA,MAEhBM,SAFgB;AAAA,MAELC,WAFK;;AAIvB,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWN,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMO,OAAO,GAAGP,IAAI,GAAG,EAAvB;;AALuB,8BAOWQ,MAAM,CAACJ,OAAD,CAAN,CAAgBK,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAPX;AAAA;AAAA,MAOhBC,UAPgB;AAAA,MAOJC,WAPI;;AAAA,+BAQaJ,MAAM,CAACD,OAAD,CAAN,CAAgBE,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CARb;AAAA;AAAA,MAQhBG,WARgB;AAAA,MAQHC,YARG;;AAUvB,WAASC,aAAT,GAAyB;AACrBZ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AACDN,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIK,SAAS,IAAIF,IAAI,GAAG,CAAxB,EAA2B;AACvBgB,MAAAA,UAAU,CAAC,YAAM;AACbf,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAFS,EAEP,IAFO,CAAV;AAGH;AACJ,GANQ,EAMN,CAACE,SAAD,EAAYF,IAAZ,CANM,CAAT;AAOA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEF,MAAM,CAACmB,iBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAON;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaKZ,SAAS,gBAAI;AAAQ,MAAA,IAAI,EAAC,QAAb;AACV,MAAA,SAAS,EAAEJ,MAAM,CAACoB,oBADR;AAEV,MAAA,OAAO,EAAEH,aAFC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ,gBAKH;AAAQ,MAAA,IAAI,EAAC,QAAb;AACC,MAAA,SAAS,EAAEjB,MAAM,CAACoB,oBADnB;AAEC,MAAA,OAAO,EAAEH,aAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBX;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GAjDehB,Q;;KAAAA,Q","sourcesContent":["import { useState, useEffect } from 'react'\nimport styles from '../styles/components/Coutdown.module.css'\nexport function Coutdown() {\n    const [time, setTime] = useState(25 * 60)\n    const [isAactive, setIsActive] = useState(false)\n\n    const minutes = Math.floor(time / 60)\n    const seconds = time % 60\n\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('')\n    const [secondsLeft, secondsRight] = String(seconds).padStart(2, '0').split('')\n\n    function startContdown() {\n        setIsActive(true)\n    }\n    useEffect(() => {\n        if (isAactive && time > 0) {\n            setTimeout(() => {\n                setTime(time - 1)\n            }, 1000)\n        }\n    }, [isAactive, time])\n    return (\n        <div>\n            <div className={styles.coutdownContainer}>\n                <div>\n                    <span>{minuteLeft}</span>\n                    <span>{minuteRight}</span>\n                </div>\n                <span>:</span>\n                <div>\n                    <span>{secondsLeft}</span>\n                    <span>{secondsRight}</span>\n                </div>\n            </div>\n\n            {isAactive ? (<button type=\"button\"\n                className={styles.startCountdownButton}\n                onClick={startContdown}>\n                Abandonar ciclo\n            </button>)\n                : (<button type=\"button\"\n                    className={styles.startCountdownButton}\n                    onClick={startContdown}>\n                    Iniciar ciclo\n                </button>)}\n\n\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}