{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/pedro/moveit2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/home/pedro/moveit2/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/home/pedro/moveit2/src/components/Coutdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport { ChallengeContext } from '../contexts/ChallengesContext';\nimport styles from '../styles/components/Coutdown.module.css';\nvar countdownTimeOut;\nexport function Coutdown() {\n  _s();\n\n  var _useContext = useContext(ChallengeContext);\n\n  _objectDestructuringEmpty(_useContext);\n\n  var _useState = useState(0.1 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isAactive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondsLeft = _String$padStart$spli4[0],\n      secondsRight = _String$padStart$spli4[1];\n\n  function startContdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeOut);\n    setIsActive(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(function () {\n    if (isAactive && time > 0) {\n      countdownTimeOut = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isAactive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n    }\n  }, [isAactive, time]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.coutdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.startCountdownButton,\n      children: \"Ciclo encerrado.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isAactive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"\".concat(styles.startCountdownButton, \" \").concat(styles.startCountdownButtonActive),\n        onClick: resetCountdown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.startCountdownButton,\n        onClick: startContdown,\n        children: \"Iniciar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Coutdown, \"74vGTh34FyPRbInm3onFtWmLUKk=\");\n\n_c = Coutdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Coutdown\");","map":{"version":3,"sources":["/home/pedro/moveit2/src/components/Coutdown.tsx"],"names":["useState","useEffect","useContext","ChallengeContext","styles","countdownTimeOut","Coutdown","time","setTime","isAactive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","String","padStart","split","minuteLeft","minuteRight","secondsLeft","secondsRight","startContdown","resetCountdown","clearTimeout","setTimeout","coutdownContainer","startCountdownButton","startCountdownButtonActive"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from 'react'\nimport { ChallengeContext } from '../contexts/ChallengesContext'\nimport styles from '../styles/components/Coutdown.module.css'\n\nlet countdownTimeOut: NodeJS.Timeout\n\nexport function Coutdown() {\n    const { } = useContext(ChallengeContext)\n\n    const [time, setTime] = useState(0.1 * 60)\n    const [isAactive, setIsActive] = useState(false)\n    const [hasFinished, setHasFinished] = useState(false)\n\n    const minutes = Math.floor(time / 60)\n    const seconds = time % 60\n\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('')\n    const [secondsLeft, secondsRight] = String(seconds).padStart(2, '0').split('')\n\n    function startContdown() {\n        setIsActive(true)\n    }\n    function resetCountdown() {\n        clearTimeout(countdownTimeOut)\n        setIsActive(false)\n        setTime(0.1 * 60)\n    }\n    useEffect(() => {\n        if (isAactive && time > 0) {\n            countdownTimeOut = setTimeout(() => {\n                setTime(time - 1)\n            }, 1000)\n        } else if (isAactive && time === 0) {\n            setHasFinished(true)\n            setIsActive(false)\n\n        }\n\n\n    }, [isAactive, time])\n    return (\n        <div>\n            <div className={styles.coutdownContainer}>\n                <div>\n                    <span>{minuteLeft}</span>\n                    <span>{minuteRight}</span>\n                </div>\n                <span>:</span>\n                <div>\n                    <span>{secondsLeft}</span>\n                    <span>{secondsRight}</span>\n                </div>\n            </div>\n\n            {hasFinished ? (\n                <button disabled className={styles.startCountdownButton}>\n                    Ciclo encerrado.\n                </button>\n            ) : (\n                    <>\n                        {isAactive ? (<button type=\"button\"\n                            className={`${styles.startCountdownButton} ${styles.startCountdownButtonActive}`}\n                            onClick={resetCountdown}>\n                            Abandonar ciclo\n                        </button>\n                        ) : (\n                                <button type=\"button\"\n                                    className={styles.startCountdownButton}\n                                    onClick={startContdown}>\n                                    Iniciar ciclo\n                                </button>)}\n                    </>\n                )}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}