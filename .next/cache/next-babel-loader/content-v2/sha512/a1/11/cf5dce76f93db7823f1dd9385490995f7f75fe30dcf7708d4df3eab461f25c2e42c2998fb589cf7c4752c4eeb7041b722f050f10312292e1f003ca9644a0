{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pedro/moveit2/src/contexts/ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nexport var ChallengeContext = /*#__PURE__*/createContext({});\nexport function ChallengeProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExpirence = _useState2[0],\n      setCurrentExpirence = _useState2[1];\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengeContext.Provider, {\n    value: {\n      level: level,\n      levelUp: levelUp\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengeProvider, \"w9x91GrACHDcXWFS588DfIKEtBA=\");\n\n_c = ChallengeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengeProvider\");","map":{"version":3,"sources":["/home/pedro/moveit2/src/contexts/ChallengesContext.tsx"],"names":["createContext","useState","ChallengeContext","ChallengeProvider","children","level","setLevel","currentExpirence","setCurrentExpirence","levelUp"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAmD,OAAnD;AAEA,OAAO,IAAMC,gBAAgB,gBAAGF,aAAa,CAAC,EAAD,CAAtC;AAOP,OAAO,SAASG,iBAAT,OAAiE;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;;AAAA,kBAC1CH,QAAQ,CAAC,CAAD,CADkC;AAAA,MAC7DI,KAD6D;AAAA,MACtDC,QADsD;;AAAA,mBAEpBL,QAAQ,CAAC,CAAD,CAFY;AAAA,MAE7DM,gBAF6D;AAAA,MAE3CC,mBAF2C;;AAGpE,WAASC,OAAT,GAAmB;AACfH,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;;AACD,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAALA,KAAF;AAASI,MAAAA,OAAO,EAAPA;AAAT,KAAlC;AAAA,cACML;AADN;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAbeD,iB;;KAAAA,iB","sourcesContent":["import { createContext, useState, ReactNode } from 'react'\n\nexport const ChallengeContext = createContext({})\n\n\ninterface ChallengeProviderProps {\n    children: ReactNode\n}\n\nexport function ChallengeProvider({ children }: ChallengeProviderProps) {\n    const [level, setLevel] = useState(1)\n    const [currentExpirence, setCurrentExpirence] = useState(0)\n    function levelUp() {\n        setLevel(level + 1)\n    }\n    return (\n        <ChallengeContext.Provider value={{ level, levelUp }}>\n            { children}\n        </ChallengeContext.Provider>\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}