{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/pedro/moveit2/src/contexts/CountdonwContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { ChallengeContext } from './ChallengesContext';\nexport var CountdonwContext = /*#__PURE__*/createContext({});\nvar countdownTimeOut;\nexport function CountadonwProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useContext = useContext(ChallengeContext),\n      startNewChallenge = _useContext.startNewChallenge;\n\n  var _useState = useState(0.1 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      isAactive = _useState2[0],\n      setIsActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  function startCountdown() {\n    setIsActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeOut);\n    setIsActive(false);\n    setTime(0.1 * 60);\n  }\n\n  useEffect(function () {\n    if (isAactive && time > 0) {\n      countdownTimeOut = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (isAactive && time === 0) {\n      setHasFinished(true);\n      setIsActive(false);\n      startNewChallenge();\n    }\n  }, [isAactive, time]);\n  return /*#__PURE__*/_jsxDEV(CountdonwContext.Provider, {\n    value: {\n      minutes: minutes,\n      seconds: seconds,\n      hasFinished: hasFinished,\n      isAactive: isAactive,\n      startCountdonw: startCountdonw,\n      resetCountdonw: resetCountdonw\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountadonwProvider, \"g9qdRUy5QZ3KPowios4/HmjrPzs=\");\n\n_c = CountadonwProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountadonwProvider\");","map":{"version":3,"sources":["/home/pedro/moveit2/src/contexts/CountdonwContext.tsx"],"names":["createContext","useContext","useEffect","useState","ChallengeContext","CountdonwContext","countdownTimeOut","CountadonwProvider","children","startNewChallenge","time","setTime","isAactive","setIsActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","startCountdown","resetCountdown","clearTimeout","setTimeout","startCountdonw","resetCountdonw"],"mappings":";;;;;AAAA,SAAmBA,aAAnB,EAA6CC,UAA7C,EAAyDC,SAAzD,EAAoEC,QAApE,QAAoF,OAApF;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AAeA,OAAO,IAAMC,gBAAgB,gBAAGL,aAAa,CAAC,EAAD,CAAtC;AAEP,IAAIM,gBAAJ;AAEA,OAAO,SAASC,kBAAT,OAAkE;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;;AAAA,oBACvCP,UAAU,CAACG,gBAAD,CAD6B;AAAA,MAC7DK,iBAD6D,eAC7DA,iBAD6D;;AAAA,kBAG7CN,QAAQ,CAAC,MAAM,EAAP,CAHqC;AAAA,MAG9DO,IAH8D;AAAA,MAGxDC,OAHwD;;AAAA,mBAIpCR,QAAQ,CAAC,KAAD,CAJ4B;AAAA,MAI9DS,SAJ8D;AAAA,MAInDC,WAJmD;;AAAA,mBAK/BV,QAAQ,CAAC,KAAD,CALuB;AAAA,MAK9DW,WAL8D;AAAA,MAKjDC,cALiD;;AAOrE,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMS,OAAO,GAAGT,IAAI,GAAG,EAAvB;;AAEA,WAASU,cAAT,GAA0B;AACtBP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,WAASQ,cAAT,GAA0B;AACtBC,IAAAA,YAAY,CAAChB,gBAAD,CAAZ;AACAO,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,OAAO,CAAC,MAAM,EAAP,CAAP;AACH;;AACDT,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIU,SAAS,IAAIF,IAAI,GAAG,CAAxB,EAA2B;AACvBJ,MAAAA,gBAAgB,GAAGiB,UAAU,CAAC,YAAM;AAChCZ,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACH,OAF4B,EAE1B,IAF0B,CAA7B;AAGH,KAJD,MAIO,IAAIE,SAAS,IAAIF,IAAI,KAAK,CAA1B,EAA6B;AAChCK,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAJ,MAAAA,iBAAiB;AACpB;AAGJ,GAZQ,EAYN,CAACG,SAAD,EAAYF,IAAZ,CAZM,CAAT;AAcA,sBACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAC9BM,MAAAA,OAAO,EAAPA,OAD8B;AAE9BG,MAAAA,OAAO,EAAPA,OAF8B;AAG9BL,MAAAA,WAAW,EAAXA,WAH8B;AAI9BF,MAAAA,SAAS,EAATA,SAJ8B;AAK9BY,MAAAA,cAAc,EAAdA,cAL8B;AAM9BC,MAAAA,cAAc,EAAdA;AAN8B,KAAlC;AAAA,cAQKjB;AARL;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA7CeD,kB;;KAAAA,kB","sourcesContent":["import { Children, createContext, ReactNode, useContext, useEffect, useState } from 'react'\nimport { ChallengeContext } from './ChallengesContext'\n\ninterface CountdonwContextData {\n    minutes: number\n    seconds: number\n    hasFinished: boolean\n    isAactive: boolean\n    startCountdonw: () => void\n    resetCountdonw: () => void\n}\n\ninterface CountdonwProviderProps {\n    children: ReactNode\n}\n\nexport const CountdonwContext = createContext({} as CountdonwContextData)\n\nlet countdownTimeOut: NodeJS.Timeout\n\nexport function CountadonwProvider({ children }: CountdonwProviderProps) {\n    const { startNewChallenge } = useContext(ChallengeContext)\n\n    const [time, setTime] = useState(0.1 * 60)\n    const [isAactive, setIsActive] = useState(false)\n    const [hasFinished, setHasFinished] = useState(false)\n\n    const minutes = Math.floor(time / 60)\n    const seconds = time % 60\n\n    function startCountdown() {\n        setIsActive(true)\n    }\n\n    function resetCountdown() {\n        clearTimeout(countdownTimeOut)\n        setIsActive(false)\n        setTime(0.1 * 60)\n    }\n    useEffect(() => {\n        if (isAactive && time > 0) {\n            countdownTimeOut = setTimeout(() => {\n                setTime(time - 1)\n            }, 1000)\n        } else if (isAactive && time === 0) {\n            setHasFinished(true)\n            setIsActive(false)\n            startNewChallenge()\n        }\n\n\n    }, [isAactive, time])\n\n    return (\n        <CountdonwContext.Provider value={{\n            minutes,\n            seconds,\n            hasFinished,\n            isAactive,\n            startCountdonw,\n            resetCountdonw,\n        }}>\n            {children}\n        </CountdonwContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}