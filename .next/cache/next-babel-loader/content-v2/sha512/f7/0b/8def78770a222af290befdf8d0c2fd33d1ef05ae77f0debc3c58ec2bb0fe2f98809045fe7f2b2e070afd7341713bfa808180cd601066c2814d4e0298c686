{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/pedro/moveit2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/pedro/moveit2/src/components/Coutdown.tsx\";\nimport styles from '../styles/components/Coutdown.module.css';\nexport function Coutdown() {\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondsLeft = _String$padStart$spli4[0],\n      secondsRight = _String$padStart$spli4[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.coutdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondsRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.startCountdownButton,\n      children: \"Ciclo encerrado.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isAactive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"\".concat(styles.startCountdownButton, \" \").concat(styles.startCountdownButtonActive),\n        onClick: resetCountdown,\n        children: \"Abandonar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 39\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.startCountdownButton,\n        onClick: startContdown,\n        children: \"Iniciar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_c = Coutdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Coutdown\");","map":{"version":3,"sources":["/home/pedro/moveit2/src/components/Coutdown.tsx"],"names":["styles","Coutdown","String","minutes","padStart","split","minuteLeft","minuteRight","seconds","secondsLeft","secondsRight","coutdownContainer","hasFinished","startCountdownButton","isAactive","startCountdownButtonActive","resetCountdown","startContdown"],"mappings":";;;;AAEA,OAAOA,MAAP,MAAmB,0CAAnB;AAGA,OAAO,SAASC,QAAT,GAAoB;AAAA,8BAEWC,MAAM,CAACC,OAAD,CAAN,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAFX;AAAA;AAAA,MAEhBC,UAFgB;AAAA,MAEJC,WAFI;;AAAA,+BAGaL,MAAM,CAACM,OAAD,CAAN,CAAgBJ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAHb;AAAA;AAAA,MAGhBI,WAHgB;AAAA,MAGHC,YAHG;;AAMvB,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACW,iBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOL;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOE;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaKE,WAAW,gBACR;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,SAAS,EAAEZ,MAAM,CAACa,oBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAKJ;AAAA,gBACKC,SAAS,gBAAI;AAAQ,QAAA,IAAI,EAAC,QAAb;AACV,QAAA,SAAS,YAAKd,MAAM,CAACa,oBAAZ,cAAoCb,MAAM,CAACe,0BAA3C,CADC;AAEV,QAAA,OAAO,EAAEC,cAFC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ,gBAMF;AAAQ,QAAA,IAAI,EAAC,QAAb;AACI,QAAA,SAAS,EAAEhB,MAAM,CAACa,oBADtB;AAEI,QAAA,OAAO,EAAEI,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPZ,qBAlBZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH;KAzCehB,Q","sourcesContent":["import { useState, useEffect, useContext } from 'react'\nimport { ChallengeContext } from '../contexts/ChallengesContext'\nimport styles from '../styles/components/Coutdown.module.css'\n\n\nexport function Coutdown() {\n\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('')\n    const [secondsLeft, secondsRight] = String(seconds).padStart(2, '0').split('')\n\n\n    return (\n        <div>\n            <div className={styles.coutdownContainer}>\n                <div>\n                    <span>{minuteLeft}</span>\n                    <span>{minuteRight}</span>\n                </div>\n                <span>:</span>\n                <div>\n                    <span>{secondsLeft}</span>\n                    <span>{secondsRight}</span>\n                </div>\n            </div>\n\n            {hasFinished ? (\n                <button disabled className={styles.startCountdownButton}>\n                    Ciclo encerrado.\n                </button>\n            ) : (\n                    <>\n                        {isAactive ? (<button type=\"button\"\n                            className={`${styles.startCountdownButton} ${styles.startCountdownButtonActive}`}\n                            onClick={resetCountdown}>\n                            Abandonar ciclo\n                        </button>\n                        ) : (\n                                <button type=\"button\"\n                                    className={styles.startCountdownButton}\n                                    onClick={startContdown}>\n                                    Iniciar ciclo\n                                </button>)}\n                    </>\n                )}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}